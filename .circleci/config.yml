version: 2

jobs:
  dev_job:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/app
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Run dependencies
          command: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      # run tests
      - run:
          name: Run tests
          command: gradle test

  main_job:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/app
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Run dependencies
          command: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      # run tests
      - run:
          name: Run tests
          command: gradle test
      # run build
      - run:
          name: Build JAR file
          command: gradle build
      # setup remote Docker (???)
      - setup_remote_docker:
      # login to DockerHub
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      # build Docker image
      - run:
          name: Build Docker image
          #command: docker build -t maroskolarik/circleci-app:$CIRCLE_BUILD_NUM .
          command: docker build -t maroskolarik/circleci-app:${CIRCLE_SHA1} .
      # push image to Docker hub
      - run:
          name: Push image to Docker Hub
          #command: docker push maroskolarik/circleci-app:$CIRCLE_BUILD_NUM
          command: docker push maroskolarik/circleci-app:${CIRCLE_SHA1}
#      - run:
#          name: Install Terraform
#          command: bash ./tf/tf-install.sh
#
#      - run:
#          name: Init Terraform
#          command:
#            terraform -chdir="./tf" init -backend=false
#      - run:
#          name: Deploy to EC2
#          command: terraform -chdir="./tf" apply -auto-approve
#      - run:
#          name: Add SSH key to environment
#          command: echo "$SSH_KEY_FINGERPRINT" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
      - run: sudo apt update
      - run: sudo apt install sshpass

      - run:
          name: Deploy Docker container to EC2
          command: bash ./update-container.sh
        
workflows:
  version: 2
  dev_job:
    jobs:
      - dev_job:
          filters:
            branches:
              only:
                - dev
  main_job:
    jobs:
      - main_job:
          filters:
            branches:
              only:
                - main
