version: 2

jobs:
  dev:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/app
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Declare dependencies
          command: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Run tests
          command: gradle test
  main:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/app
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Declare dependencies
          command: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      # run tests
      - run:
          name: Run tests
          command: gradle test
      # run build
      - run:
          name: Build JAR file
          command: gradle build
      # setup remote Docker (???)
      - setup_remote_docker:
      # login to DockerHub
      - run:
          name: Login to Docker Hub
          command: echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
      # build Docker image
      - run:
          name: Build Docker image
          command: docker build -t maroskolarik/circleci-app:${CIRCLE_BUILD_NUM} .
      # push image to Docker hub
      - run:
          name: Push image to Docker Hub
          command: docker push maroskolarik/circleci-app:${CIRCLE_BUILD_NUM}
      - run:
          name: Install sshpass
          command: |
            sudo apt update
            sudo apt install sshpass
      - run:
          name: Deploy Docker container to EC2
          command: |
            sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no ubuntu@15.237.113.118 << EOF
            sudo docker stop dummy-backend || true
            sudo docker rm dummy-backend || true
            sudo docker pull maroskolarik/circleci-app:${CIRCLE_BUILD_NUM}
            sudo docker run -d -p 8080:8080 --restart unless-stopped --name dummy-backend maroskolarik/circleci-app:${CIRCLE_BUILD_NUM}
            EOF
  
        
workflows:
  version: 2
  dev:
    jobs:
      - dev:
          filters:
            branches:
              only:
                - dev
  main:
    jobs:
      - main:
          filters:
            branches:
              only:
                - main
