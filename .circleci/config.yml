# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/language-java/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build_test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/app

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run:
          name: Run tests
          command: gradle test

      # run build
      - run:
          name: Build JAR file
          command: gradle build

      # setup remote Docker (???)
      - setup_remote_docker:

      # login to DockerHub
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      # build Docker image
      - run:
          name: Build Docker image
          command: docker build -t maroskolarik/circleci-app:$CIRCLE_BUILD_NUM .

      # push image to Docker hub
      - run:
          name: Push image to Docker Hub
          command: docker push maroskolarik/circleci-app:$CIRCLE_BUILD_NUM

  build_dev:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/app

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      # run tests!
      - run:
          name: Run tests
          command: gradle test
      # run build
      - run:
          name: Build JAR file
          command: gradle build
      # setup remote Docker (???)
      - setup_remote_docker:
      # login to DockerHub
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      # build Docker image
      - run:
          name: Build Docker image
          command: docker build -t maroskolarik/circleci-app:$CIRCLE_BUILD_NUM .
      # push image to Docker hub
      - run:
          name: Push image to Docker Hub
          command: docker push maroskolarik/circleci-app:$CIRCLE_BUILD_NUM

      - run:
          name: Install Terraform
          command: sh tf-install.sh

      - run: terraform version
        
workflows:
  version: 2
  build_test:
    jobs:
      - build_test:
          filters:
            branches:
              ignore:
                - dev
                - main
  build_dev:
    jobs:
      - build_dev:
          filters:
            branches:
              only:
                - dev
#    build_main:
#      jobs:
#        - build_main:
#            filters:
#              branches:
#                only:
#                  - main
